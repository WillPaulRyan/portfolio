{"version":3,"sources":["components/Buttons.js","components/Profile.js","components/About.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","id","onClick","this","props","handleClick","className","React","Component","Profile","src","alt","href","target","rel","download","About","Projects","projects","name","pic","url","github","map","project","i","key","title","Contact","App","event","setState","display","parentNode","state","bind","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","console","log","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17d9fb64.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.css';\r\n\r\nclass Buttons extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"buttons\">\r\n        <button onClick={this.props.handleClick} id='home'><i className=\"fas fa-home\"></i></button>\r\n        <button onClick={this.props.handleClick} id='about'><i className=\"far fa-address-card\"></i></button>\r\n        <button onClick={this.props.handleClick} id='projects'><i className=\"fas fa-hammer\"></i></button>\r\n        <button onClick={this.props.handleClick} id='contact'><i className=\"fas fa-at\"></i></button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport './Profile.css';\r\n\r\n\r\nclass Profile extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"profile\">\r\n        <img id=\"profile-header\" src='https://cdn.pixabay.com/photo/2016/03/06/06/42/low-poly-1239778_1280.jpg' alt=''/>\r\n        <h1>Will Ryan III</h1>\r\n        <h3>Web Developer</h3>\r\n        <div id=\"social\">\r\n          <a href=\"https://www.linkedin.com/in/willpaulryan/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin\"></i></a>\r\n          <a href=\"https://github.com/WillPaulRyan\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n          <a href=\"https://codepen.io/willpaulryan\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-codepen\"></i></a>\r\n        </div>\r\n        <a id=\"cv\" href=\"./Will%20Ryan%20CV.pdf\" target=\"_blank\" download><h4>Download CV</h4></a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './About.css';\r\n\r\nclass About extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"about-container\">\r\n        <div id=\"about-content\">\r\n          <h1>About Me</h1>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Projects.css';\r\n\r\nclass Projects extends React.Component {\r\n  render () {\r\n    let array = [\r\n      {\r\n        name: \"Tommy Frozen Yogurt\",\r\n        pic: \"https://www.sampletherapy.com/uploads/6/5/8/3/65832467/samples-therapy-exterior_orig.jpg\",\r\n        url: \"https://tommyfrozen.com/\",\r\n        github: \"https://github.com/WillPaulRyan/tommy\"\r\n      },\r\n      {\r\n        name: \"wr3.xyz\",\r\n        pic: \"https://www.visioncritical.com/hubfs/Imported_Blog_Media/BLG_Andrew-G_-River-Sample_09_13_12.png\",\r\n        url: \"https://wr3.xyz\",\r\n        github: \"https://github.com/WillPaulRyan/portfolio\"\r\n      },\r\n      {\r\n        name: \"2020 Odds\",\r\n        pic: \"https://www.roadrunnerrecords.com/sites/g/files/g2000005056/f/sample-4.jpg\",\r\n        url: \"http://www.2020-odds.com/\",\r\n        github: \"https://github.com/WillPaulRyan/2020-odds\"\r\n      },\r\n      {\r\n        name: \"Emoji Speller\",\r\n        pic: \"https://ysjournal.com/wp-content/uploads/2014/03/sample_overlay.gif\",\r\n        url: \"http://www.emojispeller.com/\",\r\n        github: \"https://github.com/WillPaulRyan/emoji-speller\"\r\n      },\r\n      {\r\n        name: \"Virtual Monkeys\",\r\n        pic: \"https://images.everydayhealth.com/images/endomorph-diet-food-list-722x406.jpg\",\r\n        url: \"https://willpaulryan.github.io/virtual-monkeys/\",\r\n        github: \"https://github.com/WillPaulRyan/virtual-monkeys\"\r\n      },\r\n      {\r\n        name: \"React Flashcards\",\r\n        pic: \"https://4.img-dpreview.com/files/p/E~TS590x0~articles/3925134721/0266554465.jpeg\",\r\n        url: \"https://willpaulryan.github.io/flashcards/\",\r\n        github: \"https://github.com/WillPaulRyan/flashcards\"\r\n      }\r\n    ];\r\n\r\n    let projects = array.map((project, i) => {\r\n      return (\r\n        <div key={i} className=\"project\">\r\n          <img src={project.pic} alt={project.name} title={project.name}></img>\r\n          <div className=\"project-links\">\r\n            <a href={project.url} title=\"View site\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-eye\"></i></a>\r\n            <a href={project.github} title=\"View code\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div id=\"projects-container\">\r\n        <div id=\"projects-content\">\r\n          <h1>My Projects</h1>\r\n          <div id=\"projects-list\">\r\n            { projects }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Contact.css';\r\n\r\n\r\nclass Contact extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"contact-container\">\r\n        <div id=\"contact-content\">\r\n          <h1>Contact</h1><br />\r\n          <p>Drop me a line at</p>\r\n          <h3><a href=\"mailto:will@wr3.xyz\"><span className=\"big\">will</span>@<span className=\"big\">wr3</span>.xyz</a></h3>\r\n          <br />\r\n          <p>Find me at</p>\r\n          <h4><a href=\"https://www.linkedin.com/in/willpaulryan/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"big\">linkedin</span>.com/in/<span className=\"big\">willpaulryan</span></a></h4>\r\n          <h4><a href=\"https://github.com/WillPaulRyan\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"big\">github</span>.com/<span className=\"big\">willpaulryan</span></a></h4>\r\n          <h4><a href=\"https://codepen.io/willpaulryan\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"big\">codepen</span>.io/<span className=\"big\">willpaulryan</span></a></h4>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport Buttons from './components/Buttons';\nimport Profile from './components/Profile';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'home',\n    };\n  }\n\n  handleClick = (event) => {\n    if (event.target.id) {\n      this.setState({\n        display: event.target.id\n      });\n    }\n    else {\n      this.setState({\n        display: event.target.parentNode.id\n      });\n    }\n  }\n\n  render() {\n    if (this.state.display === 'about') {\n      return (\n        <div id=\"app\">\n          <Buttons handleClick={this.handleClick.bind(this)} />\n          <div id=\"content\">\n            <Profile />\n            <div className=\"section\">\n              <About />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else if (this.state.display === 'projects') {\n      return (\n        <div id=\"app\">\n          <Buttons handleClick={this.handleClick.bind(this)} />\n          <div id=\"content\">\n            <Profile />\n            <div className=\"section\">\n              <Projects />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else if (this.state.display === 'contact') {\n      return (\n        <div id=\"app\">\n          <Buttons handleClick={this.handleClick.bind(this)} />\n          <div id=\"content\">\n            <Profile />\n            <div className=\"section\">\n              <Contact />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div id=\"app\">\n          <Buttons handleClick={this.handleClick.bind(this)} />\n          <div id=\"content\">\n            <Profile />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('page'));\n\nconsole.log(`\n########  ##       ########    ###     ######  ########       ##     ## #### ########  ########       ##     ## ######## \n##     ## ##       ##         ## ##   ##    ## ##             ##     ##  ##  ##     ## ##             ###   ### ##       \n##     ## ##       ##        ##   ##  ##       ##             ##     ##  ##  ##     ## ##             #### #### ##       \n########  ##       ######   ##     ##  ######  ######         #########  ##  ########  ######         ## ### ## ######   \n##        ##       ##       #########       ## ##             ##     ##  ##  ##   ##   ##             ##     ## ##       \n##        ##       ##       ##     ## ##    ## ##             ##     ##  ##  ##    ##  ##             ##     ## ##       \n##        ######## ######## ##     ##  ######  ########       ##     ## #### ##     ## ########       ##     ## ######## \n\n`)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}