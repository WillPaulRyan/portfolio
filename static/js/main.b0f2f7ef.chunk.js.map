{"version":3,"sources":["components/Profile.js","components/About.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Profile","id","src","alt","href","target","rel","className","download","React","Component","About","Projects","Contact","App","props","handleClick","event","setState","display","parentNode","state","this","onClick","style","width","border","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0f2f7ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Profile.css';\r\n\r\n\r\nclass Profile extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"profile\">\r\n        <img id=\"profile-header\" src='https://cdn.pixabay.com/photo/2016/03/06/06/42/low-poly-1239778_1280.jpg' alt=''/>\r\n        <h1>Will Ryan III</h1>\r\n        <h3>Web Developer</h3>\r\n        <div id=\"social\">\r\n          <a href=\"https://www.linkedin.com/in/willpaulryan/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin\"></i></a>\r\n          <a href=\"https://github.com/WillPaulRyan\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n          <a href=\"https://codepen.io/willpaulryan\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-codepen\"></i></a>\r\n        </div>\r\n        <a id=\"cv\" href=\"./cv.pdf\" target=\"_blank\" download><h4>Download CV</h4></a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nclass About extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello world</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass Projects extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello projects</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Contact.css';\r\n\r\n\r\nclass Contact extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"contact-content\">\r\n        <h1>Contact</h1><br />\r\n        <p>Drop me a line at</p>\r\n        <a href=\"mailto:willpaulryan@gmail.com\"><h3><span className=\"big\">willpaulryan</span>@<span className=\"big\">gmail</span>.com</h3></a>\r\n        <br />\r\n        <p>Find me at</p>\r\n        <a href=\"https://www.linkedin.com/in/willpaulryan/\" target=\"_blank\"><h4><span className=\"big\">linkedin</span>.com/in/<span className=\"big\">willpaulryan</span></h4></a>\r\n        <a href=\"https://github.com/WillPaulRyan\" target=\"_blank\"><h4><span className=\"big\">github</span>.com/<span className=\"big\">willpaulryan</span></h4></a>\r\n        <a href=\"https://codepen.io/willpaulryan\" target=\"_blank\"><h4><span className=\"big\">codepen</span>.io/<span className=\"big\">willpaulryan</span></h4></a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport Profile from './components/Profile';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'home',\n    };\n  }\n\n  handleClick = (event) => {\n    if (event.target.id) {\n      this.setState({\n        display: event.target.id\n      });\n    }\n    else {\n      this.setState({\n        display: event.target.parentNode.id\n      });\n    }\n  }\n\n  render() {\n    if (this.state.display === 'about') {\n      return (\n        <div id=\"content\">\n          <div id=\"buttons\">\n            <button onClick={this.handleClick} id='home'><i className=\"fas fa-home\"></i></button>\n            <button onClick={this.handleClick} id='about'><i className=\"far fa-address-card\"></i></button>\n            <button onClick={this.handleClick} id='projects'><i className=\"fas fa-hamsa\"></i></button>\n            <button onClick={this.handleClick} id='contact'><i className=\"fas fa-at\"></i></button>\n          </div>\n\n          <Profile />\n          <div className=\"section\">\n            <About />\n          </div>\n        </div>\n      )\n    }\n    else if (this.state.display === 'projects') {\n      return (\n        <div id=\"content\">\n          <div id=\"buttons\">\n            <button onClick={this.handleClick} id='home'><i className=\"fas fa-home\"></i></button>\n            <button onClick={this.handleClick} id='about'><i className=\"far fa-address-card\"></i></button>\n            <button onClick={this.handleClick} id='projects'><i className=\"fas fa-hamsa\"></i></button>\n            <button onClick={this.handleClick} id='contact'><i className=\"fas fa-at\"></i></button>\n          </div>\n\n          <Profile />\n          <div className=\"section\">\n            <Projects />\n          </div>\n        </div>\n      )\n    }\n    else if (this.state.display === 'contact') {\n      return (\n        <div id=\"content\">\n          <div id=\"buttons\">\n            <button onClick={this.handleClick} id='home'><i className=\"fas fa-home\"></i></button>\n            <button onClick={this.handleClick} id='about'><i className=\"far fa-address-card\"></i></button>\n            <button onClick={this.handleClick} id='projects'><i className=\"fas fa-hamsa\"></i></button>\n            <button onClick={this.handleClick} id='contact'><i className=\"fas fa-at\"></i></button>\n          </div>\n\n          <Profile />\n          <div className=\"section\">\n            <Contact />\n          </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div id=\"content\">\n          <div id=\"buttons\">\n            <button onClick={this.handleClick} id='home'><i className=\"fas fa-home\"></i></button>\n            <button onClick={this.handleClick} id='about'><i className=\"far fa-address-card\"></i></button>\n            <button onClick={this.handleClick} id='projects'><i className=\"fas fa-hamsa\"></i></button>\n            <button onClick={this.handleClick} id='contact'><i className=\"fas fa-at\"></i></button>\n\n          </div>\n          <Profile />\n          <div className=\"section\" style={{width: 0, border: 'none'}}></div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('page'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}